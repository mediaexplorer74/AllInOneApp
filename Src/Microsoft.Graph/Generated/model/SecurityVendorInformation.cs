// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type SecurityVendorInformation.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<SecurityVendorInformation>))]
    public partial class SecurityVendorInformation
    {

        /// <summary>
        /// Gets or sets provider.
        /// Specific provider (product/service - not vendor company); for example, WindowsDefenderATP.
        /// </summary>
        [JsonPropertyName("provider")]
        public string Provider { get; set; }
    
        /// <summary>
        /// Gets or sets providerVersion.
        /// Version of the provider or subprovider, if it exists, that generated the alert. Required
        /// </summary>
        [JsonPropertyName("providerVersion")]
        public string ProviderVersion { get; set; }
    
        /// <summary>
        /// Gets or sets subProvider.
        /// Specific subprovider (under aggregating provider); for example, WindowsDefenderATP.SmartScreen.
        /// </summary>
        [JsonPropertyName("subProvider")]
        public string SubProvider { get; set; }
    
        /// <summary>
        /// Gets or sets vendor.
        /// Name of the alert vendor (for example, Microsoft, Dell, FireEye). Required
        /// </summary>
        [JsonPropertyName("vendor")]
        public string Vendor { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
