// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type ChangeNotificationEncryptedContent.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<ChangeNotificationEncryptedContent>))]
    public partial class ChangeNotificationEncryptedContent
    {

        /// <summary>
        /// Gets or sets data.
        /// Base64-encoded encrypted data that produces a full resource respresented as JSON. The data has been encrypted with the provided dataKey using an AES/CBC/PKCS5PADDING cipher suite.
        /// </summary>
        [JsonPropertyName("data")]
        public string Data { get; set; }
    
        /// <summary>
        /// Gets or sets dataKey.
        /// Base64-encoded symmetric key generated by Microsoft Graph to encrypt the data value and to generate the data signature. This key is encrypted with the certificate public key that was provided during the subscription. It must be decrypted with the certificate private key before it can be used to decrypt the data or verify the signature. This key has been encrypted with the following cipher suite: RSA/ECB/OAEPWithSHA1AndMGF1Padding.
        /// </summary>
        [JsonPropertyName("dataKey")]
        public string DataKey { get; set; }
    
        /// <summary>
        /// Gets or sets dataSignature.
        /// Base64-encoded HMAC-SHA256 hash of the data for validation purposes.
        /// </summary>
        [JsonPropertyName("dataSignature")]
        public string DataSignature { get; set; }
    
        /// <summary>
        /// Gets or sets encryptionCertificateId.
        /// ID of the certificate used to encrypt the dataKey.
        /// </summary>
        [JsonPropertyName("encryptionCertificateId")]
        public string EncryptionCertificateId { get; set; }
    
        /// <summary>
        /// Gets or sets encryptionCertificateThumbprint.
        /// Hexadecimal representation of the thumbprint of the certificate used to encrypt the dataKey.
        /// </summary>
        [JsonPropertyName("encryptionCertificateThumbprint")]
        public string EncryptionCertificateThumbprint { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
