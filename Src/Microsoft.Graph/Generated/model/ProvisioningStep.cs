// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type ProvisioningStep.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<ProvisioningStep>))]
    public partial class ProvisioningStep
    {

        /// <summary>
        /// Gets or sets description.
        /// Summary of what occurred during the step.
        /// </summary>
        [JsonPropertyName("description")]
        public string Description { get; set; }
    
        /// <summary>
        /// Gets or sets details.
        /// Details of what occurred during the step.
        /// </summary>
        [JsonPropertyName("details")]
        public DetailsInfo Details { get; set; }
    
        /// <summary>
        /// Gets or sets name.
        /// Name of the step.
        /// </summary>
        [JsonPropertyName("name")]
        public string Name { get; set; }
    
        /// <summary>
        /// Gets or sets provisioningStepType.
        /// Type of step. Possible values are: import, scoping, matching, processing, referenceResolution, export, unknownFutureValue.
        /// </summary>
        [JsonPropertyName("provisioningStepType")]
        public ProvisioningStepType? ProvisioningStepType { get; set; }
    
        /// <summary>
        /// Gets or sets status.
        /// Status of the step. Possible values are: success, warning,  failure, skipped, unknownFutureValue.
        /// </summary>
        [JsonPropertyName("status")]
        public ProvisioningResult? Status { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
