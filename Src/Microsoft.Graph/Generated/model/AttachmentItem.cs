// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type AttachmentItem.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<AttachmentItem>))]
    public partial class AttachmentItem
    {

        /// <summary>
        /// Gets or sets attachmentType.
        /// The type of attachment. Possible values are: file, item, reference. Required.
        /// </summary>
        [JsonPropertyName("attachmentType")]
        public AttachmentType? AttachmentType { get; set; }
    
        /// <summary>
        /// Gets or sets contentType.
        /// The nature of the data in the attachment. Optional.
        /// </summary>
        [JsonPropertyName("contentType")]
        public string ContentType { get; set; }
    
        /// <summary>
        /// Gets or sets isInline.
        /// true if the attachment is an inline attachment; otherwise, false. Optional.
        /// </summary>
        [JsonPropertyName("isInline")]
        public bool? IsInline { get; set; }
    
        /// <summary>
        /// Gets or sets name.
        /// The display name of the attachment. This can be a descriptive string and does not have to be the actual file name. Required.
        /// </summary>
        [JsonPropertyName("name")]
        public string Name { get; set; }
    
        /// <summary>
        /// Gets or sets size.
        /// The length of the attachment in bytes. Required.
        /// </summary>
        [JsonPropertyName("size")]
        public Int64? Size { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
