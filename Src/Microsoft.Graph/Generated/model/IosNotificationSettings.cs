// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type IosNotificationSettings.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<IosNotificationSettings>))]
    public partial class IosNotificationSettings
    {

        /// <summary>
        /// Gets or sets alertType.
        /// Indicates the type of alert for notifications for this app. Possible values are: deviceDefault, banner, modal, none.
        /// </summary>
        [JsonPropertyName("alertType")]
        public IosNotificationAlertType? AlertType { get; set; }
    
        /// <summary>
        /// Gets or sets appName.
        /// Application name to be associated with the bundleID.
        /// </summary>
        [JsonPropertyName("appName")]
        public string AppName { get; set; }
    
        /// <summary>
        /// Gets or sets badgesEnabled.
        /// Indicates whether badges are allowed for this app.
        /// </summary>
        [JsonPropertyName("badgesEnabled")]
        public bool? BadgesEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets bundleID.
        /// Bundle id of app to which to apply these notification settings.
        /// </summary>
        [JsonPropertyName("bundleID")]
        public string BundleID { get; set; }
    
        /// <summary>
        /// Gets or sets enabled.
        /// Indicates whether notifications are allowed for this app.
        /// </summary>
        [JsonPropertyName("enabled")]
        public bool? Enabled { get; set; }
    
        /// <summary>
        /// Gets or sets publisher.
        /// Publisher to be associated with the bundleID.
        /// </summary>
        [JsonPropertyName("publisher")]
        public string Publisher { get; set; }
    
        /// <summary>
        /// Gets or sets showInNotificationCenter.
        /// Indicates whether notifications can be shown in notification center.
        /// </summary>
        [JsonPropertyName("showInNotificationCenter")]
        public bool? ShowInNotificationCenter { get; set; }
    
        /// <summary>
        /// Gets or sets showOnLockScreen.
        /// Indicates whether notifications can be shown on the lock screen.
        /// </summary>
        [JsonPropertyName("showOnLockScreen")]
        public bool? ShowOnLockScreen { get; set; }
    
        /// <summary>
        /// Gets or sets soundsEnabled.
        /// Indicates whether sounds are allowed for this app.
        /// </summary>
        [JsonPropertyName("soundsEnabled")]
        public bool? SoundsEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
