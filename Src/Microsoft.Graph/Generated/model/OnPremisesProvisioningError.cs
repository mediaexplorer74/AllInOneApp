// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type OnPremisesProvisioningError.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<OnPremisesProvisioningError>))]
    public partial class OnPremisesProvisioningError
    {

        /// <summary>
        /// Gets or sets category.
        /// Category of the provisioning error. Note: Currently, there is only one possible value. Possible value: PropertyConflict - indicates a property value is not unique. Other objects contain the same value for the property.
        /// </summary>
        [JsonPropertyName("category")]
        public string Category { get; set; }
    
        /// <summary>
        /// Gets or sets occurredDateTime.
        /// The date and time at which the error occurred.
        /// </summary>
        [JsonPropertyName("occurredDateTime")]
        public DateTimeOffset? OccurredDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets propertyCausingError.
        /// Name of the directory property causing the error. Current possible values: UserPrincipalName or ProxyAddress
        /// </summary>
        [JsonPropertyName("propertyCausingError")]
        public string PropertyCausingError { get; set; }
    
        /// <summary>
        /// Gets or sets value.
        /// Value of the property causing the error.
        /// </summary>
        [JsonPropertyName("value")]
        public string Value { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
